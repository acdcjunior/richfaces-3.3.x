<?xml version="1.0" encoding="UTF-8"?>
<f:root xmlns:f="http://ajax4jsf.org/cdk/template"
	xmlns:c=" http://java.sun.com/jsf/core"
	xmlns:ui=" http://ajax4jsf.org/cdk/ui"
	xmlns:u=" http://ajax4jsf.org/cdk/u"
	xmlns:x=" http://ajax4jsf.org/cdk/x"
	xmlns:vcp=" http://ajax4jsf.org/cdk/vcp"
	class="org.richfaces.renderkit.html.CalendarRenderer"
	baseclass="org.richfaces.renderkit.CalendarRendererBase"
	component="org.richfaces.component.UICalendar">
	<f:clientid var="clientId" />
	<h:scripts>new org.ajax4jsf.javascript.PrototypeScript(),new org.ajax4jsf.javascript.AjaxScript(),/org/richfaces/renderkit/html/scripts/events.js,/org/richfaces/renderkit/html/scripts/utils.js,/org/richfaces/renderkit/html/scripts/json/json-dom.js,/org/richfaces/renderkit/html/scripts/scriptaculous/effects.js,/org/richfaces/renderkit/html/scripts/jquery/jquery.js,/org/richfaces/renderkit/html/scripts/jquery/jquery.js,/org/richfaces/renderkit/html/scripts/JQuerySpinBtn.js,/org/richfaces/renderkit/html/scripts/calendar.js</h:scripts>

	<h:styles>/org/richfaces/renderkit/html/css/calendar.xcss</h:styles>
	
	<f:call name="addPopupToAjaxRendered" />
	
	<span id="#{clientId}Popup"
			x:passThruWithExclusions="value,name,type,id,styleClass,class,style"> 
		<jsp:scriptlet>
		<![CDATA[
				boolean popup = getUtils().isBooleanAttribute(component, "popup");
				if (!popup) {
					getUtils().writeAttribute(writer, "style", "display: none");
			
		]]>
		</jsp:scriptlet> 
				<input id="#{clientId}InputDate"
				autocomplete="off"
					style="display:none"	
					name="#{clientId}InputDate"
					value="#{this:getInputValue(context,component)}" type="hidden" />
		<jsp:scriptlet>
		<![CDATA[
				} else {
				boolean disabled = getUtils().isBooleanAttribute(component, "disabled");				
				boolean showInput = getUtils().isBooleanAttribute(component, "showInput");
				String onfieldclick =null;
			    String type="text";
				if (!showInput){
					type="hidden";
				}
				
				variables.setVariable("type",type);
				variables.setVariable("disabled",new Boolean(disabled));
				]]>
				
		</jsp:scriptlet> 
	<f:resource
		name="org.richfaces.renderkit.html.iconimages.CalendarIcon" var="icon" />
	<f:resource
		name="org.richfaces.renderkit.html.iconimages.DisabledCalendarIcon"
		var="disabledIcon" /> 
	
		<input id="#{clientId}InputDate"
			name="#{clientId}InputDate"
			value="#{this:getInputValue(context,component)}" type="#{type}"
			disabled="#{disabled}"
			accesskey="#{component.attributes['accesskey']}"
			maxlength="#{component.attributes['maxlength']}"
			onchange="#{component.attributes['oninputchange']}"
			onselect="#{component.attributes['oninputselect']}"
			onfocus="#{component.attributes['oninputfocus']}"
			onblur="#{component.attributes['oninputblur']}"
			onclick="#{component.attributes['oninputclick']}"
			onkeypress="#{component.attributes['oninputkeypress']}"
			onkeydown="#{component.attributes['oninputkeydown']}"
			onkeyup="#{component.attributes['oninputkeyup']}"
			onmouseover="#{component.attributes['oninputmouseover']}"
			onmouseout="#{component.attributes['oninputmouseout']}"
			size="#{component.attributes['inputSize']}"
			style="vertical-align: middle; #{component.attributes['inputStyle']}"
			class="rich-calendar-input #{component.attributes['inputClass']}"
			tabindex="#{component.attributes['tabindex']}">
			<jsp:scriptlet>
			<![CDATA[
				boolean manualInput = getUtils().isBooleanAttribute(component, "enableManualInput");
				boolean readonly = getUtils().isBooleanAttribute(component, "readonly");
				if(!manualInput || readonly){
						getUtils().writeAttribute(writer, "readonly", "readonly");
					}   
			     	]]>
			</jsp:scriptlet>
		
		</input> 
		<jsp:scriptlet>
		 <![CDATA[
			String buttonIcon = org.richfaces.component.util.ViewUtil.getResourceURL((String) component.getAttributes().get("buttonIcon"),context);
			String buttonIconDisabled = org.richfaces.component.util.ViewUtil.getResourceURL((String) component.getAttributes().get("buttonIconDisabled"),context);
			String buttonLabel = (String) component.getAttributes().get("buttonLabel");
			variables.setVariable("buttonLabel",buttonLabel);
			variables.setVariable("buttonIconDisabled",buttonIconDisabled);
			variables.setVariable("buttonIcon",buttonIcon);
			if(buttonLabel==null || buttonLabel.length()==0){	
		]]>
		 </jsp:scriptlet><img id="#{clientId}PopupButton" alt=""
		class="rich-calendar-button #{component.attributes['buttonClass']}"
		accesskey="#{component.attributes['accesskey']}"
		style="vertical-align: middle"
		tabindex="#{component.attributes['tabindex']}">
	<jsp:scriptlet>
			<![CDATA[
			    if(!disabled){
			    	
			    	//getUtils().writeAttribute(writer, "onclick", "$('"+clientId+"').component.doSwitch();");
			    	if(buttonIcon==null){
						getUtils().writeAttribute(writer, "src", variables.getVariable("icon"));
					}
					else{
						getUtils().writeAttribute(writer, "src", buttonIcon);
					}
			    }
			    else{
			    	
			    		//getUtils().writeAttribute(writer, "onclick", null);
			    		if(buttonIconDisabled==null){
							getUtils().writeAttribute(writer, "src", variables.getVariable("disabledIcon"));
						}
						else{
							getUtils().writeAttribute(writer, "src", buttonIconDisabled);
							}	
			    	}			    
			]]>
		</jsp:scriptlet> </img> <jsp:scriptlet>
		<![CDATA[
				}
			else{		
		]]>
	</jsp:scriptlet>
	<button type="button" id="#{clientId}PopupButton" name="#{clientId}PopupButton"
		style="vertical-align: middle"
		class="rich-calendar-button #{component.attributes['buttonClass']}"
		tabindex="#{component.attributes['tabindex']}" disabled="#{disabled}">
	#{buttonLabel}</button>
	<jsp:scriptlet>
		<![CDATA[
				} 
		]]>
	</jsp:scriptlet> <jsp:scriptlet>
		<![CDATA[
				} 
		]]>
	</jsp:scriptlet> 
		<c:object var="currentDate" type="java.util.Date" value="#{component.currentDateOrDefault}" />

		<input id="#{clientId}InputCurrentDate"
			style="display:none"	
			autocomplete="off"
			name="#{clientId}InputCurrentDate"
			value="#{this:getCurrentDateAsString(context,component,currentDate)}" type="hidden" />
		<f:call name="dayCellClass" />
	</span>
	<div style="display: none;" id="#{clientId}IFrame"></div>
	<div style="display: none;" id="#{clientId}">
	</div>
	<div style="display: none;" id="#{clientId}Script">
	
	<c:scriptObject var="options">
		<c:scriptOption attributes="enableManualInput, disabled, readonly, resetTimeOnDateSelect, showApplyButton, styleClass" />
		<c:scriptOption attributes="popup" defaultValue="true" />
		<c:scriptOption attributes="showInput" defaultValue="true" />
		<c:scriptOption attributes="ajaxSingle" defaultValue="true" />
		<c:scriptOption attributes="showHeader" defaultValue="true" />
		<c:scriptOption attributes="showFooter" defaultValue="true" />
		<c:scriptOption attributes="showWeeksBar" defaultValue="true" />
		<c:scriptOption attributes="showWeekDaysBar" defaultValue="true" />
		<c:scriptOption attributes="todayControlMode" defaultValue="select" />
		<c:scriptOption attributes="datePattern" defaultValue="MMM d, yyyy" />
		<c:scriptOption attributes="jointPoint" defaultValue="bottom-left" />
		<c:scriptOption attributes="direction" defaultValue="bottom-right" />
		<c:scriptOption attributes="boundaryDatesMode" defaultValue="inactive" />
		<c:scriptOption attributes="horizontalOffset" defaultValue="0" />
		<c:scriptOption attributes="verticalOffset" defaultValue="0" />
		
		<c:scriptOption name="currentDate"  value="#{this:getCurrentDate(context, component, currentDate)}" />
		<c:scriptOption name="selectedDate"  value="#{this:getSelectedDate(context, component)}" />
		<c:scriptOption name="style"  value="z-index: #{component.attributes['zindex']}; #{component.attributes['style']}" defaultValue="z-index: 3; "/>
		<c:scriptOption name="submitFunction"  value="#{this:getSubmitFunction(context, component)}" />
		<c:scriptOption name="dayCellClass"  value="#{this:getDayCellClass(context, component)}" />
		<c:scriptOption name="dayStyleClass"  value="#{this:getDayStyleClass(context, component)}" />
		<c:scriptOption name="isDayEnabled"  value="#{this:getIsDayEnabled(context, component)}" />
		
		<c:scriptOption attributes="ondateselected, ondateselect, ontimeselect, ontimeselected, onchanged, ondatemouseover, ondatemouseout, onexpand, oncollapse, oncurrentdateselect, oncurrentdateselected" wrapper="eventHandler" />
		<c:scriptOption name="labels" value="#{this:getLabels(context, component)}" />
	</c:scriptObject>
	<script type="text/javascript">
		new Calendar('#{clientId}', 
			#{this:getPreparedDefaultTime(component)},
			#{this:getMinDaysInFirstWeek(context, component)},
			#{this:getFirstWeekDay(context, component)}
			<f:call name="writeSymbols" />,

			<c:if test="#{not empty options}">
				<f:writeAsScript value="#{options}" />
			</c:if>
			<c:if test="#{empty options}">
				{}
			</c:if>, { 			
				<jsp:scriptlet>/*<![CDATA[*/
					if (component.getChildCount() != 0) {
				/*]]>*/</jsp:scriptlet>
						\n dayListMarkup: 
				<jsp:scriptlet>/*<![CDATA[*/
						writeMarkupScriptBody(context, component, true);
					} 
				/*]]>*/</jsp:scriptlet>
								
				<f:call name="writeOptionalFacetMarkupScriptBody"><f:parameter value="optionalHeader" /></f:call>
				<f:call name="writeOptionalFacetMarkupScriptBody"><f:parameter value="optionalFooter" /></f:call>
								
				<f:call name="writeFacetMarkupScriptBody"><f:parameter value="weekDay" /></f:call>
				<f:call name="writeFacetMarkupScriptBody"><f:parameter value="weekNumber" /></f:call>
				<f:call name="writeFacetMarkupScriptBody"><f:parameter value="header" /></f:call>
				<f:call name="writeFacetMarkupScriptBody"><f:parameter value="footer" /></f:call>
		}).load(
			<jsp:scriptlet>/*<![CDATA[*/
				writePreloadBody(context, component);
			/*]]>*/</jsp:scriptlet>
			);
	</script>
	</div>
</f:root>
