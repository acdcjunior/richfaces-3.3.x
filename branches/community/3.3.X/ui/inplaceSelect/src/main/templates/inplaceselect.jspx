<?xml version="1.0" encoding="UTF-8"?>
<f:root 
	xmlns:f="http://ajax4jsf.org/cdk/template" 
	xmlns:c=" http://java.sun.com/jsf/core" 
	xmlns:ui=" http://ajax4jsf.org/cdk/ui"
	xmlns:u=" http://ajax4jsf.org/cdk/u"
	xmlns:jsp=" http://ajax4jsf.org/cdk/jsp"
	xmlns:x=" http://ajax4jsf.org/cdk/x"
	baseclass="org.richfaces.renderkit.InplaceSelectBaseRenderer"
	class="org.richfaces.renderkit.html.InplaceSelectRenderer"
	component="org.richfaces.component.UIInplaceSelect">
	
	

<h:styles>css/inplaceselect.xcss</h:styles>  
	
<h:scripts>
	new org.ajax4jsf.javascript.PrototypeScript()    ,
	/org/richfaces/renderkit/html/scripts/jquery/jquery.js,
	scripts/comboboxUtils.js      ,
	scripts/combolist.js         ,
	scripts/inplaceinputstyles.js,
	scripts/inplaceinput.js     ,
	scripts/inplaceselectstyles.js,
	scripts/inplaceselectlist.js,
	scripts/inplaceselect.js,
	/org/richfaces/renderkit/html/scripts/utils.js
</h:scripts>

<f:clientid var="clientId" />
<f:resource var="saveIcon" name="org.richfaces.renderkit.html.images.SaveControlIcon"/>
<f:resource var="cancelIcon" name="org.richfaces.renderkit.html.images.CancelControlIcon"/>

<c:object var="preparedItems" type="java.util.List" value="#{this:prepareItems(context, component)}" />

<jsp:scriptlet>
		<![CDATA[
		Object value = null;
		String selectedItemLabel = null;

		Object submittedValue = component.getSubmittedValue();
		if (submittedValue != null) {
			if (preparedItems != null) {
				for (Object o: preparedItems) {
					PreparedSelectItem item = (PreparedSelectItem) o;
					if (submittedValue.equals(item.getConvertedValue())) {
						selectedItemLabel = item.getLabel();
						value = submittedValue;
						break;
					}
				}
			}
		} else {
			value = component.getAttributes().get("value");
			selectedItemLabel = getItemLabel(context, component, value);
			value = getConvertedStringValue(context, component,value);
		}
		
		String fieldValue = null;
		String fieldLabel = null;
		String fieldInputLabel = null;
		
		if (selectedItemLabel == null) {
			fieldValue = null;
			fieldLabel = createDefaultLabel(component);
			fieldInputLabel="";
		} else {
			fieldValue = (String)value;
			fieldLabel = selectedItemLabel;
			fieldInputLabel = fieldLabel; 
		}
		
	   	variables.setVariable("fieldLabel", fieldLabel);
	   	variables.setVariable("fieldValue", fieldValue);
	   	variables.setVariable("fieldInputLabel", fieldInputLabel);
	   	
	   	String saveIcon =  (String)component.getAttributes().get("saveControlIcon");
	   	if (saveIcon != null && saveIcon.length() != 0 ) {
	   		variables.setVariable("saveIcon", org.richfaces.component.util.ViewUtil.getResourceURL(saveIcon ,context));
	   	}
	   	
	   	String cancelIcon =  (String)component.getAttributes().get("cancelControlIcon");
	   	if (cancelIcon != null && cancelIcon.length() != 0 ) {
	   		variables.setVariable("cancelIcon", org.richfaces.component.util.ViewUtil.getResourceURL(cancelIcon ,context));
	   	}

	   	String controlClass = (String)component.getAttributes().get("controlClass");
	   	variables.setVariable("controlClass", controlClass);
	   	String controlHoveredClass = (String)component.getAttributes().get("controlHoveredClass"); 
	   	variables.setVariable("controlHoveredClass", controlHoveredClass);
	   	String controlPressedClass = (String)component.getAttributes().get("controlPressedClass"); 
	   	variables.setVariable("controlPressedClass", controlPressedClass);
	   	
	   	String styleClass = (String)component.getAttributes().get("styleClass");
	   	styleClass = styleClass != null ? styleClass.trim() : "";
	   	variables.setVariable("styleClass", styleClass);
	   	
	   	String changedClass = (String)component.getAttributes().get("changedClass");
	   	changedClass = (changedClass != null ? changedClass.trim() : "") + " " + styleClass;
	   	variables.setVariable("changedClass", changedClass.trim());
	   	
	   	String viewClass = (String)component.getAttributes().get("viewClass");
	   	viewClass = (viewClass != null ? viewClass.trim() : "") + " " + styleClass;
	   	variables.setVariable("viewClass", viewClass.trim());
	   	
	   	String editClass = (String)component.getAttributes().get("editClass");
	   	editClass = (editClass != null ? editClass.trim() : "") + " " + styleClass;
	   	variables.setVariable("editClass", editClass.trim());
	   	
	   	String layout = (String)component.getAttributes().get("layout");
	   	
	   	if (layout != null && layout.length() != 0) {
	   		if (!layout.equals("block")) {
	   			layout = "inline";
	   		}
	   	} else {
   			layout = "inline";
	   	}
	   	
	   	]]>
	</jsp:scriptlet>
<f:resource var="spacer" name="images/spacer.gif"/>
	

<jsp:scriptlet>
	if (layout.equals("inline")) {	
</jsp:scriptlet>
		<span id="#{clientId}" class="rich-inplace-select rich-inplace-select-view #{viewClass}"  x:passThruWithExclusions="id,styleClass,class" style="zoom: 1; #{component.attributes['style']}">
<jsp:scriptlet>
	} else {	
</jsp:scriptlet>
		<div id="#{clientId}" class="rich-inplace-select rich-inplace-select-view #{viewClass}"  x:passThruWithExclusions="id,styleClass,class" style="zoom: 1; #{component.attributes['style']}">
<jsp:scriptlet>
	} 	
</jsp:scriptlet>	  
	<input id="#{clientId}tempValue" 
			   type="text"
			   style='clip:rect(0px 0px 0px 0px)' 
			   value="#{fieldInputLabel}" 
			   autocomplete="off"
			   maxlength='#{component.attributes["inputMaxLength"]}'
			   readonly="readonly"
			   class="rich-inplace-select-field"
			   onselect='#{component.attributes["onselect"]}'
			   onblur='#{component.attributes["oninputblur"]}'
			   onfocus='#{component.attributes["oninputfocus"]}'
			   onclick='#{component.attributes["oninputclick"]}'
			   ondblclick='#{component.attributes["oninputdblclick"]}'
			   onkeydown='#{component.attributes["oninputkeydown"]}'
			   onkeypress='#{component.attributes["oninputkeypress"]}'
			   onkeyup='#{component.attributes["oninputkeyup"]}'
			   onmousedown='#{component.attributes["oninputmousedown"]}'
			   onmousemove='#{component.attributes["oninputmousemove"]}'
			   onmouseout='#{component.attributes["oninputmouseout"]}'
			   onmouseover='#{component.attributes["oninputmouseover"]}'
			   onmouseup='#{component.attributes["oninputmouseup"]}'
			   
			   />
		<input id="#{clientId}inselArrow" readonly="readonly" type="text" value="" class="rich-inplace-select-arrow" style='display:none;'/>
		<input autocomplete="off" id='#{clientId}value' name='#{clientId}' type='hidden' value='#{fieldValue}'
			   onchange='#{component.attributes["onchange"]}'>
		</input>
	<div id="#{clientId}bar" class="rich-inplace-select-control-set" style="display:none;">
		<jsp:scriptlet>
				<![CDATA[
				 if (isControlsFacetExists(context, component)) {
				     encodeControlsFacet(context, component);
				 } else {
				]]>
			</jsp:scriptlet>
		<div class="rich-inplace-select-shadow" id="#{clientId}btns_shadow">
			<table cellpadding="0" cellspacing="0" border="0" class="rich-inplace-select-shadow-size">
				<tr>
					<td class="rich-inplace-select-shadow-tl">
						<img src="#{spacer}" width="10" height="1" alt="" style="border:0"/><br/>
					</td>
					<td class="rich-inplace-select-shadow-tr">
						<img src="#{spacer}" width="1" height="10" alt="" style="border:0"/><br/>
					</td>
				</tr>
				<tr>
					<td class="rich-inplace-select-shadow-bl">
						<img src="#{spacer}" width="1" height="10" alt="" style="border:0"/><br/>
					</td>
					<td class="rich-inplace-select-shadow-br">
						<img src="#{spacer}" width="10" height="1" alt="" style="border:0"/><br/>
					</td>
				</tr>
			</table>
		</div>
		<div id="#{clientId}buttons" style="position : relative; width: 1px">		
			<input id="#{clientId}ok" type="image" src="#{saveIcon}" 
				   class="rich-inplace-select-control #{controlClass}" 
				   onmousedown="this.className='rich-inplace-select-control-press #{controlPressedClass}'" 
				   onmouseout="this.className='rich-inplace-select-control #{controlClass}'" 
				   onmouseup="this.className='rich-inplace-select-control #{controlClass}'"
				   onmouseover="this.className='rich-inplace-select-control #{controlHoverClass}'"/>
			<input id="#{clientId}cancel" type="image" src="#{cancelIcon}" 
				   class="rich-inplace-select-control #{controlClass}" 
				   onmousedown="this.className='rich-inplace-select-control-press #{controlPressedClass}'" 
				   onmouseout="this.className='rich-inplace-select-control #{controlClass}'" 
				   onmouseup="this.className='rich-inplace-select-control #{controlClass}'"
				   onmouseover="this.className='rich-inplace-select-control #{controlHoverClass}'"
				   />
		</div>
		
		<jsp:scriptlet>
				<![CDATA[
				 }
				 ]]>
		</jsp:scriptlet>
	</div>
		<div id="#{clientId}listParent" class="rich-inplace-select-width-list" style="display: none; position : absolute; height : 100px; left : 0px; top: 13px; z-index:1000;">
			<div class="rich-inplace-select-list-shadow">
				<!-- TODO welcome magic numbers! -->
				<table id="#{clientId}shadow" cellpadding="0" cellspacing="0" border="0" width="257" height="109">
					<tr>
						<td class="rich-inplace-select-shadow-tl">
							<img src="#{spacer}" width="10" height="1" alt="" style="border:0"/><br/>
						</td>
						<td class="rich-inplace-select-shadow-tr">
							<img src="#{spacer}" width="1" height="10" alt="" style="border:0"/><br/>
						</td>
					</tr>
					<tr>
						<td class="rich-inplace-select-shadow-bl">
							<img src="#{spacer}" width="1" height="10" alt="" style="border:0"/><br/>
						</td>
						<td class="rich-inplace-select-shadow-br">
							<img src="#{spacer}" width="10" height="10" alt="" style="border:0"/><br/>
						</td>
					</tr>
				</table>
			</div>
			<div id="#{clientId}listPosition" class="rich-inplace-select-list-position">
				<div id="#{clientId}listDecoration" class="rich-inplace-select-list-decoration">
					<div id="#{clientId}list" class="rich-inplace-select-list-scroll">
						<jsp:scriptlet>
						<![CDATA[
						encodeItems(context, component, preparedItems);
						]]>
						</jsp:scriptlet>
					</div>
				</div>
			</div>
			
			
			<c:scriptObject var="attributes">
				<c:scriptOption name="defaultLabel" value="#{this:getDefaultLabel(context, component)}" defaultValue="\u00a0\u00a0\u00a0" />
				<c:scriptOption attributes="showControls" />
				<c:scriptOption attributes="editEvent" defaultValue="onclick"/>
				<c:scriptOption name="verticalPosition" value="#{component.attributes['controlsVerticalPosition']}" defaultValue="center" />
				<c:scriptOption name="horizontalPosition" value="#{component.attributes['controlsHorizontalPosition']}" defaultValue="right" />
				<c:scriptOption name="inputWidth" value="#{component.attributes['selectWidth']}" />
				<c:scriptOption name="minInputWidth" value="#{component.attributes['minSelectWidth']}" defaultValue="100px" />
				<c:scriptOption name="maxInputWidth" value="#{component.attributes['maxSelectWidth']}" defaultValue="200px" />			
				<c:scriptOption attributes="openOnEdit" defaultValue="true"/>
			</c:scriptObject>
			<c:scriptObject var="events">
				<c:scriptOption attributes="oneditactivation, onviewactivation, oneditactivated, onviewactivated, onchange" wrapper="eventHandler" /> 
			</c:scriptObject>
			<c:scriptObject var="view">
				<c:scriptOption name="normal" value="#{viewClass}" />
				<c:scriptOption name="hovered" value="#{component.attributes['viewHoverClass']}" />
			</c:scriptObject>
			<c:scriptObject var="changed">
				<c:scriptOption name="normal" value="#{changedClass}" />
				<c:scriptOption name="hovered" value="#{component.attributes['changedHoverClass']}" />
			</c:scriptObject>
			<c:scriptObject var="componentStyles">
				<c:scriptOption variables="view, changed" />
				<c:scriptOption name="editable" value="#{editClass}" />
			</c:scriptObject>
			<c:scriptObject var="userStyles">
				<c:scriptOption name="component" value="#{componentStyles}" />
			</c:scriptObject>
			<c:scriptObject var="listOptions">
				<c:scriptOption attributes="listWidth, listHeight" defaultValue="200px"/>
				<c:scriptOption name="itemsText" value="#{preparedItems}" />
			</c:scriptObject>
			<c:scriptObject var="options">
				<c:scriptOption attributes="showValueInView" />
				<c:scriptOption variables="attributes, events, userStyles, fieldValue, listOptions" />
			</c:scriptObject>
			<script type="text/javascript">
				new Richfaces.InplaceSelect('#{clientId}'
					<c:if test="#{not empty options}">
					, <f:writeAsScript value="#{options}" />
					</c:if> 					
				);
			</script>
	</div>
		
<jsp:scriptlet>
	if(isEmptyDefaultLabel(convertToString(variables.getVariable("fieldLabel")))) {
		writer.write(convertToString(variables.getVariable("fieldLabel")));
	} else {
		writer.writeText(convertToString(variables.getVariable("fieldLabel")),null);
	}	
	
	if (!layout.equals("inline")) {	
</jsp:scriptlet>
		</div>
<jsp:scriptlet>
	} else {	
</jsp:scriptlet>
		</span>
<jsp:scriptlet>
	} 	
</jsp:scriptlet>

</f:root>	 
