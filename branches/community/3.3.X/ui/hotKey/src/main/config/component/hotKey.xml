<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE components PUBLIC "-//AJAX4JSF//CDK Generator config/EN"  "http://labs.jboss.com/jbossrichfaces/component-config.dtd">

<components>
	<component>
		<name>org.richfaces.HotKey</name>
		<family>org.richfaces.HotKey</family>
		<classname>org.richfaces.component.html.HtmlHotKey</classname>
		<superclass>org.richfaces.component.UIHotKey</superclass>
		
		<test />
		
		<description>
			The &lt;rich:hotKey&gt; component allows to register hot keys for the page or particular elements and to define client side processing functions for these keys.
		</description>
		<renderer generate="true" override="true">
			<name>org.richfaces.HotKeyRenderer</name>
			<template>org/richfaces/htmlHotKey.jspx</template>
		</renderer>
		<tag>
			<name>hotKey</name>
			<classname>org.richfaces.taglib.HotKeyTag</classname>
			<superclass>
				org.ajax4jsf.webapp.taglib.HtmlComponentTagBase
			</superclass>
			<test />
		</tag>
		<!--
		<taghandler>
			<classname>org.ajax4jsf.tag.TestHandler</classname>
		</taghandler>
		-->
		&ui_component_attributes;
		<property>
			<name>key</name>
			<classname>java.lang.String</classname>
			<description>
				Defines the hotkey itself
			</description>
			<defaultvalue>""</defaultvalue>
		</property>
		<property>
			<name>timing</name>
			<classname>java.lang.String</classname>
			<description>
				Defines the time when the hotkey is registered. Possible values are &quot;immediate&quot; (by default), &quot;onload&quot;, and &quot;onregistercall&quot;.
				Default value is &quot;immediate&quot;
			</description>
			<defaultvalue>"immediate"</defaultvalue>
		</property>
		<property>
			<name>selector</name>
			<classname>java.lang.String</classname>
			<description>
				Defines a selector for query
			</description>
			<defaultvalue>""</defaultvalue>
		</property>
		<property>
			<name>type</name>
			<classname>java.lang.String</classname>
			<description>
				Defines the type of a keyboard event (onkeyup, onkeypress, etc.)
			</description>
			<defaultvalue>""</defaultvalue>
		</property>
		<property>
			<name>disableInInput</name>
			<classname>java.lang.Boolean</classname>
			<description>
				Disables the hotkeys activated on input elements when the value of this attribute is &quot;true&quot;.
			</description>
		</property>
		<property>
			<name>checkParent</name>
			<classname>java.lang.Boolean</classname>
			<description>
				Defines the hotkey handling of events generated by child components nested into the parent component to which the &lt;rich:hotKey&gt; is attached.
			</description>
		</property>
		<property>
			<name>handler</name>
			<classname>java.lang.String</classname>
			<description>
				Defines the JavaScript function name which is called on hotkey activation
			</description>
			<defaultvalue>""</defaultvalue>
		</property>
		<property>
			<name>disableInInputTypes</name>
			<classname>java.lang.String</classname>
			<description>Defines the types of the inputs not to be influenced with hotKey component. Possible values: buttons, texts and all (default). By default it is empty and this means ALL the types.</description>
		</property>
	</component>
</components>
