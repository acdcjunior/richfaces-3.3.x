<section role="NotInToc" id="rich_columnGroup">
   <title>
				&lt;
				rich:columnGroup
				&gt;
				<emphasis role="since">
         <superscript> available since <emphasis role="version">3.0.0</emphasis>
         </superscript>
      </emphasis>
   </title>
   <section>
      <title>Description</title>
      <para>The component combines columns in one row to organize complex subparts of a table.</para>
      <figure>
        <title>
            <emphasis role="bold">
               <property>&lt;rich:columnGroup&gt;</property>
            </emphasis> component</title>
         <mediaobject> 
            <imageobject>
               <imagedata fileref="images/columnGroup_init.png"/>
            </imageobject>
         </mediaobject>
      </figure>
    </section>
   <section>
      <title>Key Features</title> 
      <itemizedlist>
         <listitem>
            <para>Completely skinned table columns and child elements</para>
         </listitem>
         <listitem>
            <para>Possibility to combine columns and rows inside</para>
         </listitem>
         <listitem>
            <para>Possibility to update a limited set of strings with Ajax </para>
         </listitem>
      </itemizedlist>  
   </section>
   <section>
      <title>Details of Usage</title>
      <para>The <emphasis role="bold">
            <property>&lt;rich:columnGroup&gt;</property>
         </emphasis> component combines columns set wrapping them into the <emphasis role="bold">
            <property>&lt;tr&gt;</property>
         </emphasis> element and outputting them
     into one row. Columns are combined in a group the same way as when the <emphasis>
            <property>"breakBefore"</property>
         </emphasis> attribute is used for 
     columns to add a moving to the next rows, but the first variant is clearer from a source code. Hence, the 
     following simple examples are very same.</para>

      <para>
         <emphasis role="bold">Example:</emphasis>
      </para>
     <programlisting role="XML">...
&lt;rich:dataTable value="#{capitalsBean.capitals}" var="cap" rows="5" id="sublist"&gt; 
		&lt;rich:column colspan="3"&gt;
				&lt;f:facet name="header"&gt;State Flag&lt;/f:facet&gt;
				&lt;h:graphicImage value="#{cap.stateFlag}"/&gt;
		&lt;/rich:column&gt;
       &lt;rich:columnGroup&gt;
       			&lt;rich:column&gt; 
               		&lt;h:outputText value="#{cap.state}"/&gt;
				&lt;/rich:column&gt;
               &lt;rich:column &gt;
               		&lt;h:outputText value="#{cap.name}"/&gt;
               &lt;/rich:column&gt;
               &lt;rich:column &gt;
               		&lt;h:outputText value="#{cap.timeZone}"/&gt;
               &lt;/rich:column&gt;
		&lt;/rich:columnGroup&gt;	
&lt;/rich:dataTable&gt;
...
</programlisting>
      <para>And representation without a grouping:</para>

      <para>
         <emphasis role="bold">Example:</emphasis>
      </para>
      <programlisting role="XML">...
&lt;rich:dataTable value="#{capitalsBean.capitals}" var="cap" rows="5" id="sublist"&gt; 
		&lt;rich:column colspan="3"&gt;
       			&lt;f:facet name="header"&gt;State Flag&lt;/f:facet&gt;
            	&lt;h:graphicImage value="#{cap.stateFlag}"/&gt;
		&lt;/rich:column&gt;
		&lt;rich:column breakBefore="true"&gt;
				&lt;h:outputText value="#{cap.state}"/&gt;
		&lt;/rich:column&gt;
		&lt;rich:column breakBefore="true"&gt;
       			&lt;h:outputText value="#{cap.name}"/&gt;
		&lt;/rich:column&gt;
		&lt;rich:column &gt;
				&lt;h:outputText value="#{cap.timeZone}"/&gt;
		&lt;/rich:column&gt;
&lt;/rich:dataTable&gt;
....
</programlisting>
      <para>The result is:</para>
      <figure>
         <title>Generated <emphasis role="bold">
               <property>&lt;rich:columnGroup&gt;</property>
            </emphasis> component 
        with <emphasis>
               <property>"breakBefore"</property>
            </emphasis> attribute</title>
         <mediaobject> 
            <imageobject>
               <imagedata fileref="images/columnGroup2.png"/>
            </imageobject>
         </mediaobject>
      </figure>
      <para>It's also possible to use the component for output of complex headers in a table. For example adding
     of a complex header to a facet for the whole table looks the following way:</para>

      <para>
         <emphasis role="bold">Example:</emphasis>
      </para>
     <programlisting role="XML">...
&lt;f:facet name="header"&gt;
		&lt;rich:columnGroup&gt;
				&lt;rich:column rowspan="2"&gt;
               		&lt;h:outputText value="State Flag"/&gt;
				&lt;/rich:column&gt;
				&lt;rich:column colspan="3"&gt;
		       			&lt;h:outputText value="State Info"/&gt;
				&lt;/rich:column&gt;
		       	&lt;rich:column breakBefore="true"&gt;
						&lt;h:outputText value="State Name"/&gt;
		       	&lt;/rich:column&gt;
		       	&lt;rich:column&gt;
		       			&lt;h:outputText value="State Capital"/&gt;
		       	&lt;/rich:column&gt;
		       	&lt;rich:column&gt;
		       			&lt;h:outputText value="Time Zone"/&gt;
		        &lt;/rich:column&gt;
		&lt;/rich:columnGroup&gt;
&lt;/f:facet&gt;
...
</programlisting>
      <para>Generated on a page as:</para>
      <figure>
         <title>
            <emphasis role="bold">
               <property>&lt;rich:columnGroup&gt;</property>
            </emphasis>with complex headers</title>
         <mediaobject> 
            <imageobject>
               <imagedata fileref="images/columnGroup3.png"/>
            </imageobject>
         </mediaobject>
      </figure>     
    </section>
   <section>
      <title>Reference Data</title>
      <para>
         <ulink url="&tlddoc;rich/columnGroup.html">Table of 
							&lt;rich:columnGroup&gt; 
							 attributes</ulink>.
						</para>
      <table>
	        <title>Component Identification Parameters</title>
         <tgroup cols="2">
	           <thead>
               <row>
                  <entry>Name</entry>
                  <entry>Value</entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>component-type</entry>
                  <entry>org.richfaces.ColumnGroup</entry>
               </row>
               <row>
                  <entry>component-class</entry>
                  <entry>org.richfaces.component.html.HtmlColumnGroup</entry>
               </row>
               <row>
                  <entry>component-family</entry>
                  <entry>org.richfaces.ColumnGroup</entry>
               </row>
               <row>
                  <entry>renderer-type</entry>
                  <entry>org.richfaces.ColumnGroupRenderer</entry>
		             </row>
		             <row>
			               <entry>tag-class</entry>
                  <entry>org.richfaces.taglib.ColumnGroupTag</entry>
               </row>
            </tbody>
         </tgroup>
      </table>
							You can find all necessary information about style classes redefinition in 
						<link linkend="customstyles">Definition of Custom Style Classes</link> 
							section.
						</section>
   <section>
        <title>Relevant Resources Links</title>
        <para>
         <ulink url="http://livedemo.exadel.com/richfaces-demo/richfaces/dataTable.jsf?c=columnGroup">On the component LiveDemo page</ulink> you can see the example of <emphasis role="bold">
            <property>&lt;rich:columnGroup&gt;</property>
         </emphasis> usage and sources for the given example. </para>
        </section>
</section>