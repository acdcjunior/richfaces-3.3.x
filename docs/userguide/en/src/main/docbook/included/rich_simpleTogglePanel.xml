<section role="NotInToc" id="rich_simpleTogglePanel">
   <title>
				&lt;
				rich:simpleTogglePanel
				&gt;
				<emphasis role="since">
         <superscript> available since <emphasis role="version">3.0.0</emphasis>
         </superscript>
      </emphasis>
   </title>
   <section>
      <title>Description</title>
      <para>A collapsible panel, which content shows/hides after activating a header control.</para>
      <figure>
        <title>
            <emphasis role="bold">
               <property>&lt;rich:simpleTogglePanel&gt;</property>
            </emphasis> component</title>
         <mediaobject> 
            <imageobject>
               <imagedata fileref="images/simpleTogglePanel_init.png"/>
            </imageobject>
         </mediaobject>
      </figure>
    </section>
   <section>
      <title>Key Features</title>
      <itemizedlist>
        <listitem>
            <para>Highly customizable look and feel </para>
         </listitem>
        <listitem>
            <para>Support for any content inside</para>
         </listitem>
        <listitem>
            <para>Collapsing expanding content</para>
         </listitem>
        <listitem>
            <para>Three modes of collapsing/expanding</para>
            <itemizedlist>
               <listitem>
                  <para>
                     <code>Server</code>
                  </para>
               </listitem>
               <listitem>
                  <para>
                     <code>Client</code>
                  </para>
               </listitem>
               <listitem>
                  <para>
                     <code>Ajax</code>
                  </para>
               </listitem>
            </itemizedlist>
        </listitem>   
      </itemizedlist>
   </section>
   <section>
      <title>Details of Usage</title>
      <para>The component is a simplified version of <property>toggle panel</property> that initially
      has a defined layout as a panel with a header playing a role of a mode switching control. On a
      component header element, it's possible to define a label using an attribute with the
      same name.</para>

      <para>Switching mode could be defined with the <emphasis>
            <property>"switchType"</property>
         </emphasis> attribute with three possible parameters.</para>
      <itemizedlist>
         <listitem>
            <para> 
               <code>Server</code> (DEFAULT)</para>
            <para>The common submission is performed around
            <property>simpleTogglePanel</property> and a page is completely rendered on a called
          panel. Only one at a time panel is uploaded onto the client side.</para>
         </listitem>
         <listitem>
            <para>
               <code> Ajax</code>
            </para>
            <para>AJAX form submission is performed around the panel, content of the called
          panel is uploaded on Ajax request and additionally specified elements in the <emphasis>
                  <property>"reRender"</property>
               </emphasis> attribute are rendered. Only one at a time panel is uploaded on the client
          side.</para>
         </listitem>
         <listitem>
            <para>
               <code>Client</code>
            </para> 
            <para> All panels are uploaded on the client side. Switching from the active
          to the hidden panel is performed with client JavaScript.</para>
         </listitem>
      </itemizedlist>
      <para>The <emphasis role="bold">
            <property>&lt;rich:simpleTogglePanel&gt;</property>
         </emphasis>component also has an <emphasis>
            <property>"opened"</property>
         </emphasis> attribute responsible for keeping a panel state. It gives an
      opportunity to manage state of the component from a model.
      If the value of this attribute is"true" the component is expanded.
    </para>

      <!--SIMPLE EXAMPLE NEEDED -->

    <itemizedlist>
         <listitem>
            <para> 
               <emphasis>
                  <property>"onmouseover "</property>
               </emphasis>
            </para>
         </listitem>
         <listitem>
            <para> 
               <emphasis>
                  <property>"onclick "</property>
               </emphasis>
            </para>
         </listitem>
         <listitem>
            <para> 
               <emphasis>
                  <property>"onmouseout "</property>
               </emphasis>
            </para>
         </listitem>
         <listitem>
            <para> etc. </para>
         </listitem>
      </itemizedlist>
      <figure>
         <title>
            <emphasis role="bold">
               <property>&lt;rich:simpleTogglePanel&gt;</property>
            </emphasis> states</title>
         <mediaobject>
            <imageobject>
               <imagedata fileref="images/simpleTogglePanel2.png"/>
            </imageobject>
         </mediaobject>
      </figure>
      <para>
	        <para>
		With help of
	      <emphasis>
	              <property>
	          "openMarker"
	        </property>
	           </emphasis>
	   and
	  <emphasis>
	              <property>
	      "closeMarker"
	    </property>
	           </emphasis> facets you can set toggle icon for
	  <property>
	    simpleTogglePanel
	  </property>.
	</para>
     Information about the <emphasis>
            <property>"process"</property>
         </emphasis> attribute usage you can find <link linkend="process">" Decide what to process " </link> guide section.
    </para>

  </section>
   <section>
      <title>Reference Data</title>
      <para>
         <ulink url="&tlddoc;rich/simpleTogglePanel.html">Table of 
							&lt;rich:simpleTogglePanel&gt; 
							 attributes</ulink>.
						</para>
      <table>
         <title>Component Identification Parameters</title>
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>Name</entry>
                  <entry>Value</entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>component-type</entry>
                  <entry>org.richfaces.SimpleTogglePanel</entry>
               </row>
               <row>
                  <entry>component-class</entry>
                  <entry>org.richfaces.component.html.HtmlSimpleTogglePanel</entry>
               </row>
               <row>
                  <entry>component-family</entry>
                  <entry>org.richfaces.SimpleTogglePanel</entry>
               </row>
               <row>
                  <entry>renderer-type</entry>
                  <entry>org.richfaces.SimpleTogglePanelRenderer</entry>
               </row>
               <row>
                  <entry>tag-class</entry>
                  <entry>org.richfaces.taglib.SimpleTogglePanelTag</entry>
               </row>
            </tbody>
         </tgroup>
      </table>
      <table>
			      <title>Facets</title>
				     <tgroup cols="2">
					       <thead>
						         <row>
							           <entry>Facet name</entry>
							           <entry>Description</entry>
						         </row>
					       </thead>
					       <tbody>
						         <row>
							           <entry>openMarker</entry>
							           <entry>Redefines the icon for expanding the panel</entry>
						         </row>
						         <row>
							           <entry>closeMarker</entry>
							           <entry>Redefines the icon for collapsing the panel</entry>
						         </row>

					       </tbody>
				     </tgroup>
		    </table>
      <table id="simpTogPanC">
         <title>Classes names that define a component appearance</title>
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>Class name</entry>
                  <entry>Class description</entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>rich-stglpanel</entry>
                  <entry>Defines styles for a wrapper  &lt;div&gt; element of a component</entry>
               </row>
               <row>
                  <entry>rich-stglpanel-header</entry>
                  <entry>Defines styles for header element of a component</entry>
               </row>
               <row>
                  <entry>rich-stglpnl-marker</entry>
                  <entry>Defines styles for a wrapper  &lt;div&gt; element of a marker</entry>
               </row>

               <row>
                  <entry>rich-stglpanel-body</entry>
                  <entry>Defines styles for a component content</entry>
               </row>
            </tbody>
         </tgroup>
      </table>
      <table>
         <title>Style component classes</title>
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>Class name</entry>
                  <entry>Class description</entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>styleClass</entry>
                  <entry>The class defines panel common style. It's used in the outside <emphasis role="bold">
                        <property>&lt;div&gt;</property>
                     </emphasis>element</entry>
               </row>
               <row>
                  <entry>bodyClass</entry>
                  <entry>applicable to panels body elements</entry>
               </row>
               <row>
                  <entry>headerClass</entry>
                  <entry>applicable to header elements</entry>
               </row>
            </tbody>
         </tgroup>
      </table>
							You can find all necessary information about style classes redefinition in 
						<link linkend="customstyles">Definition of Custom Style Classes</link> 
							section.
						</section>
   <section>
      <title>Relevant Resources Links</title>
      <para>
         <ulink url="http://livedemo.exadel.com/richfaces-demo/richfaces/simpleTogglePanel.jsf?c=simpleTogglePanel">On the component LiveDemo page</ulink> you can see the example of <emphasis role="bold">
            <property>&lt;rich:simpleTogglePanel&gt;</property>
         </emphasis> usage and sources for the given example.
    </para>
  </section>
</section>
